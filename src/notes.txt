// import React, { useState } from 'react';
// import Base from '../Base/Base';
// import { useNavigate } from 'react-router-dom';

// const SignupPage = () => {
//   const [email, setEmail] = useState('');
//   const [password, setPassword] = useState('');
//   const [confirmPassword, setConfirmPassword] = useState('');
//   const [error, setError] = useState(''); 
//   const navigate = useNavigate(); 

//   const handleSignup = async () => {
   
//     const userDetail = {
//       email,
//       password,
//       confirmPassword,
//     };
//     const response = await fetch('https://capstonebackend-47kj.onrender.com/user/signup', {
//       method: 'POST', 
//       body: JSON.stringify(userDetail),
//       headers: {
//         'content-type': 'application/json',
//       },
//     });
//     const data = await response.json();
//     if (data.token) {
//       setError(''); 
//       localStorage.setItem('token', data.token);
//       console.log(data.token);
//       navigate('/'); 
//     } else {
//       setError(data.message);
//     }
//   };

//   return (
//     <Base>
//       <h1>Signup Page</h1>
//       <input
//         type="email"
//         placeholder="Email"
//         value={email}
//         onChange={(e) => setEmail(e.target.value)}
//       />
//       <input
//         type="password"
//         placeholder="Password"
//         value={password}
//         onChange={(e) => setPassword(e.target.value)}
//       />
//       <input
//         type="password"
//         placeholder="Confirm Password"
//         value={confirmPassword}
//         onChange={(e) => setConfirmPassword(e.target.value)}
//       />
//       {error && <p>{error}</p>} 
//       <button onClick={handleSignup}>Signup</button>
//     </Base>
//   );
// };

// export default SignupPage;

// import React, { useEffect, useState } from "react";
// import Base from "../Base/Base";
// import { Button, Paper, Typography } from "@mui/material";
// import { useNavigate } from "react-router-dom";

// const UserPage = () => {
//   const navigate = useNavigate();
//   const [userData, setUserData] = useState([]);
//   const [error, setError] = useState("");
//   const [tokenId, setTokenId] = useState("");

//   const fetchUserData = async (token) => {
//     try {
//       const res = await fetch(`https://capstonebackend-47kj.onrender.com/cars/user`, {
//         method: "GET",
//         headers: {
//           "x-auth-token": token,
//         },
//       });

//       const data = await res.json();

//       if (!data.data) {
//         setError(data.message);
//       } else {
//         setUserData(data.data);
//       }
//     } catch (error) {
//       setError("An unexpected error occurred. Please try again later.");
//     }
//   };

//   useEffect(() => {
//     if (!localStorage.getItem("token")) {
//       navigate("/login", { replace: true });
//     }

//     let token = localStorage.getItem("token");
//     setTokenId(token);

//     fetchUserData(token);
//   }, [navigate, userData]);

//   return (
//     <Base>
//       <div>
//         <Button edge="end" color="inherit" aria-label="add cars" onClick={() => navigate(`/add/${tokenId}`)} sx={{ mr: 2 }}>
//           Add Cars
//         </Button>
//       </div>

//       {userData.length > 0 ? (
//         <div>
//           {userData.map((data, index) => (
//             <Paper elevation={6} key={data._id}>
//               <p>image: {data.image}</p>
//               <p>make: {data.make}</p>
//               <p>model: {data.model}</p>
//               <p>color: {data.color}</p>
//               <p>price: {data.price}</p>
//               <p>fueltype: {data.fueltype}</p>

//               <Button onClick={() => navigate(`/edit/${data._id}/${tokenId}`)}>Edit</Button>
//               <Button>Delete</Button>
//             </Paper>
//           ))}
//         </div>
//       ) : (
//         <Typography color="info">No data available</Typography>
//       )}

//       {error ? <Typography color="error">{error}</Typography> : null}
//     </Base>
//   );
// };

// export default UserPage;

import { Route, Routes } from 'react-router-dom';
import './App.css';
import DashBoard from './Components/DashBoard';
import LoginPage from './Components/LoginPage';
import UserPage from './Components/UserPage';
import AddCars from './Components/AddCars';
import EditCars from './Components/EditCars';
import SignupPage from './Components/SignupPage';
import { useState } from 'react';



function App() {
  return (
    <div className="App">
     <Routes>

         <Route exact path = "/" element={<DashBoard/>}/>
         <Route  path = "/login" element={<LoginPage/>}/>
         <Route  path = "/user" element={<UserPage/>}/>
         <Route  path = "/add/:token" element={<AddCars  
           userData={userData}
          setUserData={setUserData}/>}/>
         <Route  path = "/edit" element={<EditCars 
           userData={userData}
          setUserData={setUserData}/>}/>
         <Route  path = "/signup" element={<SignupPage/>}/>
         
     </Routes>
    </div>
  );
}

export default App;

 <Base>
      {cars && (
        <div className="container">
          {cars?.map((data, index) => (
            <Paper elevation={6} key={data._id}>
             {/* <img src={data.data.image} alt="Image" /> */}
             <img src={data.data.image} alt={data.make} />
              <p>Make: {data.data.make}</p>
              <p>Model: {data.data.model}</p>
              <p>Price: {data.data.price}</p>
              <p>Color: {data.data.color}</p>
              <p>FuelType:{data.data.fuelType}</p>
            </Paper>
          ))}
        </div>
      )}
      {error ? (
        <Typography color="error">{error}</Typography>
      ) : (
        ""
      )}
    </Base>